services:
  article-parser:
    restart: unless-stopped
    container_name: article-parser
    build:
      context: .
      dockerfile: deno-article-parser/dockerfile
    ports:
      - "8081:8081"
    environment:
      PORT: 8081
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8081"]
      retries: 3
      start_period: 10s
      timeout: 5s

  fetcher:
    container_name: fetcher
    restart: on-failure
    build:
      context: .
      dockerfile: cargo.dockerfile
      target: fetcher
    depends_on:
      - article-parser
      - surrealdb
    environment:
      ARTICLE_PARSER_URL: "http://article-parser:8081"
      SURREALDB_HOST: "surrealdb:8000"
      CHROME_HEADLESS: "true"
      RUST_LOG: "fetcher=debug"

  rater:
    container_name: rater
    restart: unless-stopped
    build:
      context: .
      dockerfile: cargo.dockerfile
      target: rater
    depends_on:
      - surrealdb
    environment:
      RUST_LOG: "rater=debug"
      SURREALDB_HOST: "surrealdb:8000"

  surrealdb:
    container_name: surrealdb
    restart: unless-stopped
    image: surrealdb/surrealdb:v1.5.1
    env_file:
      - .env
    user: root
    environment:
      - SURREAL_NO_BANNER=true
      - SURREAL_CAPS_ALLOW_FUNC
      - SURREAL_USER=${DB_USER}
      - SURREAL_PASS=${DB_PASSWORD}
      - SURREAL_AUTH=true
      - SURREAL_PATH=file:/db
    entrypoint: /surreal start
    volumes:
      - ./db:/db
    ports:
      - 8000:8000
    healthcheck:
      test: ["CMD", "/surreal", "isready"]
      retries: 3
      start_period: 10s
      timeout: 10s

  # ngrok:
  #   image: ngrok/ngrok:latest
  #   container_name: ngrok
  #   restart: unless-stopped
  #   command:
  #     - "tunnel"
  #     - "--label"
  #     - "edge=${NGROK_EDGE}"
  #     - "http://surrealdb:8000"
  #   environment:
  #     NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
  #   ports:
  #     - 4040:4040
