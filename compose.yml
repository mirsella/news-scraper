version: "3.8"

services:
  nuxt:
    restart: unless-stopped
    container_name: nuxt
    depends_on:
      - surrealdb
    build:
      context: .
      dockerfile: docker/nuxt.dockerfile
    ports:
      - "8080:3000"
    environment:
      NUXT_PUBLIC_SURREALDB_URLS: ${NUXT_PUBLIC_SURREALDB_URLS}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      retries: 3
      start_period: 5s
      timeout: 5s

  nuxt_ssl:
    restart: unless-stopped
    container_name: nuxt
    depends_on:
      - surrealdb_ssl
    build:
      context: .
      dockerfile: docker/nuxt.dockerfile
    ports:
      - "8080:3000"
    environment:
      - NUXT_PUBLIC_SURREALDB_URLS=${NUXT_PUBLIC_SURREALDB_URLS}
      - NITRO_SSL_CERT=/letsencrypt/fullchain.pem
      - NITRO_SSL_KEY=/letsencrypt/privkey.pem
    env_file: .env
    volumes:
      - ../letsencrypt:/letsencrypt
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      retries: 3
      start_period: 5s
      timeout: 5s

  article-parser:
    restart: unless-stopped
    container_name: article-parser
    build:
      context: .
      dockerfile: docker/article-parser.dockerfile
    ports:
      - "8081:8081"
    environment:
      PORT: 8081
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8081"]
      retries: 3
      start_period: 10s
      timeout: 5s

  fetcher:
    container_name: fetcher
    restart: on-failure
    build:
      context: .
      dockerfile: docker/cargo.dockerfile
      target: fetcher
    depends_on:
      - article-parser
    # as we have 2 surrealdb services, we can't specify one OR the other in compose
    # depends_on:
    #   - surrealdb
    environment:
      ARTICLE_PARSER_URL: "http://article-parser:8081"
      SURREALDB_HOST: "surrealdb:8000"
      CHROME_HEADLESS: "true"
      RUST_LOG: "fetcher=debug"

  rater:
    container_name: rater
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/cargo.dockerfile
      target: rater
    # as we have 2 surrealdb services, we can't specify one OR the other in compose
    # depends_on:
    #   - surrealdb
    environment:
      RUST_LOG: "rater=debug"
      SURREALDB_HOST: "surrealdb:8000"

  surrealdb:
    container_name: surrealdb
    restart: unless-stopped
    image: surrealdb/surrealdb:1.0.0
    env_file:
      - .env
    user: root
    environment:
      - SURREAL_CAPS_ALLOW_FUNC
      - SURREAL_USER=${DB_USER}
      - SURREAL_PASS=${DB_PASSWORD}
      - SURREAL_AUTH=true
      - SURREAL_PATH=file:/db
    entrypoint: /surreal start
    volumes:
      - ./db:/db
    ports:
      - 8000:8000
    healthcheck:
      test: ["CMD", "/surreal", "isready"]
      retries: 3
      start_period: 10s
      timeout: 10s

  surrealdb_ssl:
    container_name: surrealdb
    restart: unless-stopped
    image: surrealdb/surrealdb:1.0.0
    env_file:
      - .env
    user: root
    environment:
      - SURREAL_CAPS_ALLOW_FUNC
      - SURREAL_USER=${DB_USER}
      - SURREAL_PASS=${DB_PASSWORD}
      - SURREAL_AUTH=true
      - SURREAL_PATH=file:/db
      - SURREAL_WEB_CRT=/letsencrypt/fullchain.pem
      - SURREAL_WEB_KEY=/letsencrypt/privkey.pem
    entrypoint: /surreal start
    volumes:
      - ./db:/db
      - ../letsencrypt:/letsencrypt
    ports:
      - 8000:8000
    healthcheck:
      test: ["CMD", "/surreal", "isready"]
      retries: 3
      start_period: 10s
      timeout: 10s

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    restart: unless-stopped
    command:
      - "tunnel"
      - "--label"
      - "edge=${NGROK_EDGE}"
      - "http://surrealdb:8000"
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    ports:
      - 4040:4040
